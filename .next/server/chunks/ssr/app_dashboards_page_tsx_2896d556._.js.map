{"version":3,"sources":["turbopack:///[project]/app/dashboards/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { ApiKey } from '@/lib/api-keys-store';\r\n\r\nexport default function Dashboard() {\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [editingKey, setEditingKey] = useState<ApiKey | null>(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    key: '',\r\n    isActive: true,\r\n  });\r\n  const [copiedKey, setCopiedKey] = useState<string | null>(null);\r\n  const [notification, setNotification] = useState<{\r\n    type: 'success' | 'error';\r\n    message: string;\r\n    show: boolean;\r\n  }>({\r\n    type: 'success',\r\n    message: '',\r\n    show: false,\r\n  });\r\n\r\n  // Fetch API keys\r\n  const fetchApiKeys = async () => {\r\n    try {\r\n      console.log('fetchApiKeys - Fetching API keys...');\r\n      const response = await fetch('/api/keys');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('fetchApiKeys - Received data:', data);\r\n        setApiKeys(data);\r\n      } else {\r\n        console.error('fetchApiKeys - Response not ok:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching API keys:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApiKeys();\r\n  }, []);\r\n\r\n  // Helper function to show notifications\r\n  const showNotification = (type: 'success' | 'error', message: string) => {\r\n    setNotification({ type, message, show: true });\r\n    setTimeout(() => {\r\n      setNotification(prev => ({ ...prev, show: false }));\r\n    }, 4000);\r\n  };\r\n\r\n  // Create new API key\r\n  const handleCreate = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('/api/keys', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        setFormData({ name: '', description: '', key: '', isActive: true });\r\n        setShowCreateForm(false);\r\n        showNotification('success', 'API key created successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to create API key');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating API key:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Update API key\r\n  const handleUpdate = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingKey) return;\r\n\r\n    console.log('handleUpdate - Editing key:', editingKey);\r\n    console.log('handleUpdate - Form data:', formData);\r\n    console.log('handleUpdate - API URL:', `/api/keys/${editingKey.id}`);\r\n\r\n    try {\r\n      const response = await fetch(`/api/keys/${editingKey.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        setEditingKey(null);\r\n        setFormData({ name: '', description: '', key: '', isActive: true });\r\n        showNotification('success', 'API key updated successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to update API key');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating API key:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Delete API key\r\n  const handleDelete = async (id: string) => {\r\n    if (!confirm('Are you sure you want to delete this API key?')) return;\r\n\r\n    console.log('handleDelete - Deleting key with ID:', id);\r\n    console.log('handleDelete - API URL:', `/api/keys/${id}`);\r\n\r\n    try {\r\n      const response = await fetch(`/api/keys/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        showNotification('success', 'API key deleted successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to delete API key');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting API key:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Toggle API key status\r\n  const handleToggleStatus = async (id: string, currentStatus: boolean) => {\r\n    try {\r\n      const response = await fetch(`/api/keys/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ isActive: !currentStatus }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        showNotification('success', `API key ${!currentStatus ? 'activated' : 'deactivated'} successfully!`);\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to update API key status');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling API key status:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Copy API key to clipboard\r\n  const copyToClipboard = async (key: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(key);\r\n      setCopiedKey(key);\r\n      setTimeout(() => setCopiedKey(null), 2000);\r\n    } catch (error) {\r\n      console.error('Failed to copy:', error);\r\n    }\r\n  };\r\n\r\n  const startEdit = (key: ApiKey) => {\r\n    setEditingKey(key);\r\n    setFormData({\r\n      name: key.name,\r\n      description: key.description,\r\n      key: key.key,\r\n      isActive: key.isActive,\r\n    });\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingKey(null);\r\n    setFormData({ name: '', description: '', key: '', isActive: true });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 mx-auto mb-4 relative\">\r\n            <div className=\"absolute inset-0 rounded-full border-4 border-indigo-200\"></div>\r\n            <div className=\"absolute inset-0 rounded-full border-4 border-indigo-600 border-t-transparent animate-spin\"></div>\r\n          </div>\r\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Loading API Keys</h3>\r\n          <p className=\"text-gray-600\">Please wait while we fetch your data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-12 animate-fade-in\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-4xl font-bold gradient-text mb-3\">API Keys Dashboard</h1>\r\n              <p className=\"text-lg text-gray-600\">Manage your API keys and access tokens with style</p>\r\n              <div className=\"flex items-center mt-4 space-x-4\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\r\n                  <span className=\"text-sm text-gray-600\">{apiKeys.length} API Keys</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\r\n                  <span className=\"text-sm text-gray-600\">{apiKeys.filter(key => key.isActive).length} Active</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex space-x-4\">\r\n              <Link\r\n                href=\"/test-api\"\r\n                className=\"group inline-flex items-center px-6 py-3 border-2 border-gray-300 rounded-xl shadow-sm text-sm font-semibold text-gray-700 bg-white hover:bg-gray-50 hover:border-blue-500 hover:text-blue-600 transition-all duration-300 transform hover:-translate-y-1\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                Test API\r\n              </Link>\r\n            <Link\r\n              href=\"/\"\r\n                className=\"group inline-flex items-center px-6 py-3 border-2 border-gray-300 rounded-xl shadow-sm text-sm font-semibold text-gray-700 bg-white hover:bg-gray-50 hover:border-indigo-500 hover:text-indigo-600 transition-all duration-300 transform hover:-translate-y-1\"\r\n            >\r\n                <svg className=\"w-4 h-4 mr-2 group-hover:-translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n                </svg>\r\n                Back to Home\r\n            </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Notification */}\r\n        {notification.show && (\r\n          <div className=\"mb-6 notification-enter\">\r\n            <div className={`relative rounded-xl p-4 flex items-center space-x-3 ${\r\n              notification.type === 'success' \r\n                ? 'bg-green-50 border border-green-200' \r\n                : 'bg-red-50 border border-red-200'\r\n            }`}>\r\n              <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\r\n                notification.type === 'success' ? 'bg-green-100' : 'bg-red-100'\r\n              }`}>\r\n                {notification.type === 'success' ? (\r\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <h3 className={`text-sm font-semibold ${\r\n                  notification.type === 'success' ? 'text-green-800' : 'text-red-800'\r\n                }`}>\r\n                  {notification.type === 'success' ? 'Success!' : 'Error!'}\r\n                </h3>\r\n                <p className={`text-sm ${\r\n                  notification.type === 'success' ? 'text-green-700' : 'text-red-700'\r\n                }`}>\r\n                  {notification.message}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => setNotification(prev => ({ ...prev, show: false }))}\r\n                className={`p-1 rounded-full hover:bg-opacity-20 transition-colors duration-200 ${\r\n                  notification.type === 'success' ? 'hover:bg-green-600' : 'hover:bg-red-600'\r\n                }`}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n              {/* Progress bar */}\r\n              <div className=\"notification-progress\"></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Create/Edit Form */}\r\n        {(showCreateForm || editingKey) && (\r\n          <div className=\"mb-8 card p-8 animate-slide-in\">\r\n            <div className=\"flex items-center mb-6\">\r\n              <div className=\"w-12 h-12 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-xl flex items-center justify-center mr-4\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">\r\n                  {editingKey ? 'Edit API Key' : 'Create New API Key'}\r\n                </h2>\r\n                <p className=\"text-gray-600\">\r\n                  {editingKey ? 'Update your API key details' : 'Generate a new API key for your application'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {/* Current Data Display (only when editing) */}\r\n            {editingKey && (\r\n              <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-xl\">\r\n                <h3 className=\"text-lg font-semibold text-blue-900 mb-3 flex items-center\">\r\n                  <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                  Current API Key Data\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-blue-800 mb-1\">API Key</label>\r\n                    <div className=\"text-sm text-blue-700 font-mono bg-blue-100 px-3 py-2 rounded\">\r\n                      {editingKey.key}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-blue-800 mb-1\">Current Status</label>\r\n                    <div className=\"flex items-center\">\r\n                      <div className={`w-3 h-3 rounded-full mr-2 ${editingKey.isActive ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                      <span className={`text-sm font-medium ${editingKey.isActive ? 'text-green-700' : 'text-red-700'}`}>\r\n                        {editingKey.isActive ? 'Active' : 'Inactive'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <form onSubmit={editingKey ? handleUpdate : handleCreate} className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"name\" className=\"block text-sm font-semibold text-gray-700\">\r\n                    Key Name *\r\n                    {editingKey && (\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        (Current: {editingKey.name})\r\n                      </span>\r\n                    )}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                    className=\"input\"\r\n                    placeholder={editingKey ? `Current: ${editingKey.name}` : \"Enter a descriptive name\"}\r\n                  required\r\n                />\r\n              </div>\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"description\" className=\"block text-sm font-semibold text-gray-700\">\r\n                  Description\r\n                    {editingKey && (\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        (Current: {editingKey.description || 'No description'})\r\n                      </span>\r\n                    )}\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                  rows={3}\r\n                    className=\"input resize-none\"\r\n                    placeholder={editingKey ? `Current: ${editingKey.description || 'No description'}` : \"Optional description for this API key\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* API Key Input */}\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"apiKey\" className=\"block text-sm font-semibold text-gray-700\">\r\n                  API Key *\r\n                  {editingKey && (\r\n                    <span className=\"text-xs text-gray-500 ml-2\">\r\n                      (Current: {editingKey.key})\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"apiKey\"\r\n                    value={formData.key || ''}\r\n                    onChange={(e) => setFormData({ ...formData, key: e.target.value })}\r\n                    className=\"input font-mono text-sm\"\r\n                    placeholder={editingKey ? `Current: ${editingKey.key}` : \"Enter your API key (e.g., sk-...)\"}\r\n                    required\r\n                  />\r\n                  {!editingKey && (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        const generatedKey = 'sk-' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n                        setFormData({ ...formData, key: generatedKey });\r\n                      }}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-indigo-600 hover:text-indigo-800 text-sm font-medium\"\r\n                    >\r\n                      Generate\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  {editingKey ? 'Update the API key value' : 'Enter your API key or click Generate to create one'}\r\n                </p>\r\n              </div>\r\n              \r\n              {/* Status Toggle */}\r\n              <div className=\"p-4 bg-gray-50 rounded-xl\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <label htmlFor=\"isActive\" className=\"text-sm font-semibold text-gray-700\">\r\n                    Active Status\r\n                    {editingKey && (\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        (Current: {editingKey.isActive ? 'Active' : 'Inactive'})\r\n                      </span>\r\n                    )}\r\n                  </label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"isActive\"\r\n                      checked={formData.isActive || false}\r\n                      onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\r\n                      className=\"custom-checkbox\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-700\">\r\n                      {formData.isActive ? 'Active' : 'Inactive'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className={`w-3 h-3 rounded-full ${(formData.isActive || false) ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    {(formData.isActive || false) ? 'This API key is active and can be used' : 'This API key is inactive and cannot be used'}\r\n                  </span>\r\n                </div>\r\n                {editingKey && editingKey.isActive !== formData.isActive && (\r\n                  <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded text-sm text-yellow-800\">\r\n                    <strong>Status Change:</strong> {editingKey.isActive ? 'Active' : 'Inactive'} → {formData.isActive ? 'Active' : 'Inactive'}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Changes Summary (only when editing) */}\r\n              {editingKey && (\r\n                <div className=\"p-4 bg-gray-50 border border-gray-200 rounded-xl\">\r\n                  <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Changes Summary</h4>\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    {editingKey.name !== formData.name && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">Name:</span>\r\n                        <span className=\"text-gray-500 line-through\">{editingKey.name}</span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className=\"text-gray-900 font-medium\">{formData.name}</span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.description !== formData.description && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">Description:</span>\r\n                        <span className=\"text-gray-500 line-through\">{editingKey.description || 'No description'}</span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className=\"text-gray-900 font-medium\">{formData.description || 'No description'}</span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.key !== formData.key && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">API Key:</span>\r\n                        <span className=\"text-gray-500 line-through font-mono text-xs\">{editingKey.key.substring(0, 20)}...</span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className=\"text-gray-900 font-medium font-mono text-xs\">{formData.key.substring(0, 20)}...</span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.isActive !== formData.isActive && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">Status:</span>\r\n                        <span className={`px-2 py-1 rounded text-xs ${editingKey.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\r\n                          {editingKey.isActive ? 'Active' : 'Inactive'}\r\n                        </span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className={`px-2 py-1 rounded text-xs ${formData.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\r\n                          {formData.isActive ? 'Active' : 'Inactive'}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.name === formData.name && \r\n                     editingKey.description === formData.description && \r\n                     editingKey.key === formData.key &&\r\n                     editingKey.isActive === formData.isActive && (\r\n                      <div className=\"text-gray-500 italic\">No changes detected</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex space-x-4 pt-4\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn-primary flex items-center space-x-2\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                  </svg>\r\n                  <span>{editingKey ? 'Update' : 'Create'} API Key</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={editingKey ? cancelEdit : () => setShowCreateForm(false)}\r\n                  className=\"btn-secondary\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* Create Button */}\r\n        {!showCreateForm && !editingKey && (\r\n          <div className=\"mb-8 animate-fade-in\">\r\n            <button\r\n              onClick={() => setShowCreateForm(true)}\r\n              className=\"group btn-primary flex items-center space-x-3 text-lg px-8 py-4\"\r\n            >\r\n              <svg className=\"w-6 h-6 group-hover:rotate-90 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n              </svg>\r\n              <span>Create New API Key</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* API Keys List */}\r\n        <div className=\"animate-fade-in\">\r\n          {apiKeys.length === 0 ? (\r\n            <div className=\"card text-center py-16\">\r\n              <div className=\"w-24 h-24 mx-auto mb-6 bg-gradient-to-r from-gray-100 to-gray-200 rounded-full flex items-center justify-center\">\r\n                <svg className=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-2xl font-bold text-gray-800 mb-3\">No API Keys Found</h3>\r\n              <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">Create your first API key to get started with your application integration</p>\r\n              <button\r\n                onClick={() => setShowCreateForm(true)}\r\n                className=\"btn-primary\"\r\n              >\r\n                Create Your First API Key\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {apiKeys.map((key, index) => (\r\n                <div key={key.id} className=\"card p-6 group hover:shadow-xl transition-all duration-300 animate-fade-in\" style={{ animationDelay: `${index * 100}ms` }}>\r\n                  {/* Header */}\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-lg flex items-center justify-center\">\r\n                        <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-bold text-gray-900 text-lg\">{key.name}</h3>\r\n                      </div>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => handleToggleStatus(key.id, key.isActive)}\r\n                      className={`px-3 py-1 rounded-full text-xs font-semibold transition-all duration-200 ${\r\n                            key.isActive\r\n                          ? 'status-active'\r\n                          : 'status-inactive'\r\n                          }`}\r\n                        >\r\n                          {key.isActive ? 'Active' : 'Inactive'}\r\n                        </button>\r\n                  </div>\r\n\r\n                  {/* Description */}\r\n                  <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">\r\n                    {key.description || 'No description provided'}\r\n                  </p>\r\n\r\n                  {/* API Key */}\r\n                  <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <code className=\"text-xs font-mono text-gray-700 truncate flex-1 mr-2\">\r\n                        {key.key.substring(0, 16)}...\r\n                      </code>\r\n                      <button\r\n                        onClick={() => copyToClipboard(key.key)}\r\n                        className=\"flex items-center space-x-1 text-xs text-indigo-600 hover:text-indigo-800 font-medium transition-colors duration-200\"\r\n                      >\r\n                        {copiedKey === key.key ? (\r\n                          <>\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                            </svg>\r\n                            <span>Copied!</span>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <span>Copy</span>\r\n                          </>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Actions */}\r\n                  <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => startEdit(key)}\r\n                      className=\"flex-1 flex items-center justify-center space-x-2 px-4 py-2 text-sm font-medium text-indigo-600 bg-indigo-50 rounded-lg hover:bg-indigo-100 transition-colors duration-200\"\r\n                        >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                      </svg>\r\n                      <span>Edit</span>\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDelete(key.id)}\r\n                      className=\"flex-1 flex items-center justify-center space-x-2 px-4 py-2 text-sm font-medium text-red-600 bg-red-50 rounded-lg hover:bg-red-100 transition-colors duration-200\"\r\n                        >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                      </svg>\r\n                      <span>Delete</span>\r\n                        </button>\r\n                  </div>\r\n                </div>\r\n                  ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}