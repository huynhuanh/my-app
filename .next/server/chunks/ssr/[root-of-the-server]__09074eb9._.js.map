{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///D:/AI/Course_Complete/Fullstack%20Developer%20with%20Cursor%20Vide%20coding/projecttry/myapp/my-app/app/dashboards/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { ApiKey } from '@/lib/api-keys-store';\r\n\r\nexport default function Dashboard() {\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [editingKey, setEditingKey] = useState<ApiKey | null>(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    key: '',\r\n    isActive: true,\r\n  });\r\n  const [copiedKey, setCopiedKey] = useState<string | null>(null);\r\n  const [notification, setNotification] = useState<{\r\n    type: 'success' | 'error';\r\n    message: string;\r\n    show: boolean;\r\n  }>({\r\n    type: 'success',\r\n    message: '',\r\n    show: false,\r\n  });\r\n\r\n  // Fetch API keys\r\n  const fetchApiKeys = async () => {\r\n    try {\r\n      console.log('fetchApiKeys - Fetching API keys...');\r\n      const response = await fetch('/api/keys');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('fetchApiKeys - Received data:', data);\r\n        setApiKeys(data);\r\n      } else {\r\n        console.error('fetchApiKeys - Response not ok:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching API keys:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApiKeys();\r\n  }, []);\r\n\r\n  // Helper function to show notifications\r\n  const showNotification = (type: 'success' | 'error', message: string) => {\r\n    setNotification({ type, message, show: true });\r\n    setTimeout(() => {\r\n      setNotification(prev => ({ ...prev, show: false }));\r\n    }, 4000);\r\n  };\r\n\r\n  // Create new API key\r\n  const handleCreate = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('/api/keys', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        setFormData({ name: '', description: '', key: '', isActive: true });\r\n        setShowCreateForm(false);\r\n        showNotification('success', 'API key created successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to create API key');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating API key:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Update API key\r\n  const handleUpdate = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingKey) return;\r\n\r\n    console.log('handleUpdate - Editing key:', editingKey);\r\n    console.log('handleUpdate - Form data:', formData);\r\n    console.log('handleUpdate - API URL:', `/api/keys/${editingKey.id}`);\r\n\r\n    try {\r\n      const response = await fetch(`/api/keys/${editingKey.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        setEditingKey(null);\r\n        setFormData({ name: '', description: '', key: '', isActive: true });\r\n        showNotification('success', 'API key updated successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to update API key');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating API key:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Delete API key\r\n  const handleDelete = async (id: string) => {\r\n    if (!confirm('Are you sure you want to delete this API key?')) return;\r\n\r\n    console.log('handleDelete - Deleting key with ID:', id);\r\n    console.log('handleDelete - API URL:', `/api/keys/${id}`);\r\n\r\n    try {\r\n      const response = await fetch(`/api/keys/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        showNotification('success', 'API key deleted successfully!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to delete API key');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting API key:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Toggle API key status\r\n  const handleToggleStatus = async (id: string, currentStatus: boolean) => {\r\n    try {\r\n      const response = await fetch(`/api/keys/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ isActive: !currentStatus }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await fetchApiKeys();\r\n        showNotification('success', `API key ${!currentStatus ? 'activated' : 'deactivated'} successfully!`);\r\n      } else {\r\n        const errorData = await response.json();\r\n        showNotification('error', errorData.error || 'Failed to update API key status');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error toggling API key status:', error);\r\n      showNotification('error', 'Network error. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Copy API key to clipboard\r\n  const copyToClipboard = async (key: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(key);\r\n      setCopiedKey(key);\r\n      setTimeout(() => setCopiedKey(null), 2000);\r\n    } catch (error) {\r\n      console.error('Failed to copy:', error);\r\n    }\r\n  };\r\n\r\n  const startEdit = (key: ApiKey) => {\r\n    setEditingKey(key);\r\n    setFormData({\r\n      name: key.name,\r\n      description: key.description,\r\n      key: key.key,\r\n      isActive: key.isActive,\r\n    });\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingKey(null);\r\n    setFormData({ name: '', description: '', key: '', isActive: true });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 mx-auto mb-4 relative\">\r\n            <div className=\"absolute inset-0 rounded-full border-4 border-indigo-200\"></div>\r\n            <div className=\"absolute inset-0 rounded-full border-4 border-indigo-600 border-t-transparent animate-spin\"></div>\r\n          </div>\r\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Loading API Keys</h3>\r\n          <p className=\"text-gray-600\">Please wait while we fetch your data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-12 animate-fade-in\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-4xl font-bold gradient-text mb-3\">API Keys Dashboard</h1>\r\n              <p className=\"text-lg text-gray-600\">Manage your API keys and access tokens with style</p>\r\n              <div className=\"flex items-center mt-4 space-x-4\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\r\n                  <span className=\"text-sm text-gray-600\">{apiKeys.length} API Keys</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\r\n                  <span className=\"text-sm text-gray-600\">{apiKeys.filter(key => key.isActive).length} Active</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex space-x-4\">\r\n              <Link\r\n                href=\"/test-api\"\r\n                className=\"group inline-flex items-center px-6 py-3 border-2 border-gray-300 rounded-xl shadow-sm text-sm font-semibold text-gray-700 bg-white hover:bg-gray-50 hover:border-blue-500 hover:text-blue-600 transition-all duration-300 transform hover:-translate-y-1\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                Test API\r\n              </Link>\r\n            <Link\r\n              href=\"/\"\r\n                className=\"group inline-flex items-center px-6 py-3 border-2 border-gray-300 rounded-xl shadow-sm text-sm font-semibold text-gray-700 bg-white hover:bg-gray-50 hover:border-indigo-500 hover:text-indigo-600 transition-all duration-300 transform hover:-translate-y-1\"\r\n            >\r\n                <svg className=\"w-4 h-4 mr-2 group-hover:-translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n                </svg>\r\n                Back to Home\r\n            </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Notification */}\r\n        {notification.show && (\r\n          <div className=\"mb-6 notification-enter\">\r\n            <div className={`relative rounded-xl p-4 flex items-center space-x-3 ${\r\n              notification.type === 'success' \r\n                ? 'bg-green-50 border border-green-200' \r\n                : 'bg-red-50 border border-red-200'\r\n            }`}>\r\n              <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\r\n                notification.type === 'success' ? 'bg-green-100' : 'bg-red-100'\r\n              }`}>\r\n                {notification.type === 'success' ? (\r\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <h3 className={`text-sm font-semibold ${\r\n                  notification.type === 'success' ? 'text-green-800' : 'text-red-800'\r\n                }`}>\r\n                  {notification.type === 'success' ? 'Success!' : 'Error!'}\r\n                </h3>\r\n                <p className={`text-sm ${\r\n                  notification.type === 'success' ? 'text-green-700' : 'text-red-700'\r\n                }`}>\r\n                  {notification.message}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => setNotification(prev => ({ ...prev, show: false }))}\r\n                className={`p-1 rounded-full hover:bg-opacity-20 transition-colors duration-200 ${\r\n                  notification.type === 'success' ? 'hover:bg-green-600' : 'hover:bg-red-600'\r\n                }`}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n              {/* Progress bar */}\r\n              <div className=\"notification-progress\"></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Create/Edit Form */}\r\n        {(showCreateForm || editingKey) && (\r\n          <div className=\"mb-8 card p-8 animate-slide-in\">\r\n            <div className=\"flex items-center mb-6\">\r\n              <div className=\"w-12 h-12 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-xl flex items-center justify-center mr-4\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">\r\n                  {editingKey ? 'Edit API Key' : 'Create New API Key'}\r\n                </h2>\r\n                <p className=\"text-gray-600\">\r\n                  {editingKey ? 'Update your API key details' : 'Generate a new API key for your application'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {/* Current Data Display (only when editing) */}\r\n            {editingKey && (\r\n              <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-xl\">\r\n                <h3 className=\"text-lg font-semibold text-blue-900 mb-3 flex items-center\">\r\n                  <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                  Current API Key Data\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-blue-800 mb-1\">API Key</label>\r\n                    <div className=\"text-sm text-blue-700 font-mono bg-blue-100 px-3 py-2 rounded\">\r\n                      {editingKey.key}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-blue-800 mb-1\">Current Status</label>\r\n                    <div className=\"flex items-center\">\r\n                      <div className={`w-3 h-3 rounded-full mr-2 ${editingKey.isActive ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                      <span className={`text-sm font-medium ${editingKey.isActive ? 'text-green-700' : 'text-red-700'}`}>\r\n                        {editingKey.isActive ? 'Active' : 'Inactive'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <form onSubmit={editingKey ? handleUpdate : handleCreate} className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"name\" className=\"block text-sm font-semibold text-gray-700\">\r\n                    Key Name *\r\n                    {editingKey && (\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        (Current: {editingKey.name})\r\n                      </span>\r\n                    )}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                    className=\"input\"\r\n                    placeholder={editingKey ? `Current: ${editingKey.name}` : \"Enter a descriptive name\"}\r\n                  required\r\n                />\r\n              </div>\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"description\" className=\"block text-sm font-semibold text-gray-700\">\r\n                  Description\r\n                    {editingKey && (\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        (Current: {editingKey.description || 'No description'})\r\n                      </span>\r\n                    )}\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                  rows={3}\r\n                    className=\"input resize-none\"\r\n                    placeholder={editingKey ? `Current: ${editingKey.description || 'No description'}` : \"Optional description for this API key\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* API Key Input */}\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"apiKey\" className=\"block text-sm font-semibold text-gray-700\">\r\n                  API Key *\r\n                  {editingKey && (\r\n                    <span className=\"text-xs text-gray-500 ml-2\">\r\n                      (Current: {editingKey.key})\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"apiKey\"\r\n                    value={formData.key || ''}\r\n                    onChange={(e) => setFormData({ ...formData, key: e.target.value })}\r\n                    className=\"input font-mono text-sm\"\r\n                    placeholder={editingKey ? `Current: ${editingKey.key}` : \"Enter your API key (e.g., sk-...)\"}\r\n                    required\r\n                  />\r\n                  {!editingKey && (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        const generatedKey = 'sk-' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n                        setFormData({ ...formData, key: generatedKey });\r\n                      }}\r\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-indigo-600 hover:text-indigo-800 text-sm font-medium\"\r\n                    >\r\n                      Generate\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  {editingKey ? 'Update the API key value' : 'Enter your API key or click Generate to create one'}\r\n                </p>\r\n              </div>\r\n              \r\n              {/* Status Toggle */}\r\n              <div className=\"p-4 bg-gray-50 rounded-xl\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <label htmlFor=\"isActive\" className=\"text-sm font-semibold text-gray-700\">\r\n                    Active Status\r\n                    {editingKey && (\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        (Current: {editingKey.isActive ? 'Active' : 'Inactive'})\r\n                      </span>\r\n                    )}\r\n                  </label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"isActive\"\r\n                      checked={formData.isActive || false}\r\n                      onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\r\n                      className=\"custom-checkbox\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-700\">\r\n                      {formData.isActive ? 'Active' : 'Inactive'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className={`w-3 h-3 rounded-full ${(formData.isActive || false) ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    {(formData.isActive || false) ? 'This API key is active and can be used' : 'This API key is inactive and cannot be used'}\r\n                  </span>\r\n                </div>\r\n                {editingKey && editingKey.isActive !== formData.isActive && (\r\n                  <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded text-sm text-yellow-800\">\r\n                    <strong>Status Change:</strong> {editingKey.isActive ? 'Active' : 'Inactive'} → {formData.isActive ? 'Active' : 'Inactive'}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Changes Summary (only when editing) */}\r\n              {editingKey && (\r\n                <div className=\"p-4 bg-gray-50 border border-gray-200 rounded-xl\">\r\n                  <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Changes Summary</h4>\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    {editingKey.name !== formData.name && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">Name:</span>\r\n                        <span className=\"text-gray-500 line-through\">{editingKey.name}</span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className=\"text-gray-900 font-medium\">{formData.name}</span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.description !== formData.description && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">Description:</span>\r\n                        <span className=\"text-gray-500 line-through\">{editingKey.description || 'No description'}</span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className=\"text-gray-900 font-medium\">{formData.description || 'No description'}</span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.key !== formData.key && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">API Key:</span>\r\n                        <span className=\"text-gray-500 line-through font-mono text-xs\">{editingKey.key.substring(0, 20)}...</span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className=\"text-gray-900 font-medium font-mono text-xs\">{formData.key.substring(0, 20)}...</span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.isActive !== formData.isActive && (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-gray-600\">Status:</span>\r\n                        <span className={`px-2 py-1 rounded text-xs ${editingKey.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\r\n                          {editingKey.isActive ? 'Active' : 'Inactive'}\r\n                        </span>\r\n                        <span className=\"text-gray-400\">→</span>\r\n                        <span className={`px-2 py-1 rounded text-xs ${formData.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\r\n                          {formData.isActive ? 'Active' : 'Inactive'}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    {editingKey.name === formData.name && \r\n                     editingKey.description === formData.description && \r\n                     editingKey.key === formData.key &&\r\n                     editingKey.isActive === formData.isActive && (\r\n                      <div className=\"text-gray-500 italic\">No changes detected</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex space-x-4 pt-4\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn-primary flex items-center space-x-2\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                  </svg>\r\n                  <span>{editingKey ? 'Update' : 'Create'} API Key</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={editingKey ? cancelEdit : () => setShowCreateForm(false)}\r\n                  className=\"btn-secondary\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* Create Button */}\r\n        {!showCreateForm && !editingKey && (\r\n          <div className=\"mb-8 animate-fade-in\">\r\n            <button\r\n              onClick={() => setShowCreateForm(true)}\r\n              className=\"group btn-primary flex items-center space-x-3 text-lg px-8 py-4\"\r\n            >\r\n              <svg className=\"w-6 h-6 group-hover:rotate-90 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n              </svg>\r\n              <span>Create New API Key</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* API Keys List */}\r\n        <div className=\"animate-fade-in\">\r\n          {apiKeys.length === 0 ? (\r\n            <div className=\"card text-center py-16\">\r\n              <div className=\"w-24 h-24 mx-auto mb-6 bg-gradient-to-r from-gray-100 to-gray-200 rounded-full flex items-center justify-center\">\r\n                <svg className=\"w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-2xl font-bold text-gray-800 mb-3\">No API Keys Found</h3>\r\n              <p className=\"text-gray-600 mb-8 max-w-md mx-auto\">Create your first API key to get started with your application integration</p>\r\n              <button\r\n                onClick={() => setShowCreateForm(true)}\r\n                className=\"btn-primary\"\r\n              >\r\n                Create Your First API Key\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {apiKeys.map((key, index) => (\r\n                <div key={key.id} className=\"card p-6 group hover:shadow-xl transition-all duration-300 animate-fade-in\" style={{ animationDelay: `${index * 100}ms` }}>\r\n                  {/* Header */}\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-lg flex items-center justify-center\">\r\n                        <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-bold text-gray-900 text-lg\">{key.name}</h3>\r\n                      </div>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => handleToggleStatus(key.id, key.isActive)}\r\n                      className={`px-3 py-1 rounded-full text-xs font-semibold transition-all duration-200 ${\r\n                            key.isActive\r\n                          ? 'status-active'\r\n                          : 'status-inactive'\r\n                          }`}\r\n                        >\r\n                          {key.isActive ? 'Active' : 'Inactive'}\r\n                        </button>\r\n                  </div>\r\n\r\n                  {/* Description */}\r\n                  <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">\r\n                    {key.description || 'No description provided'}\r\n                  </p>\r\n\r\n                  {/* API Key */}\r\n                  <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <code className=\"text-xs font-mono text-gray-700 truncate flex-1 mr-2\">\r\n                        {key.key.substring(0, 16)}...\r\n                      </code>\r\n                      <button\r\n                        onClick={() => copyToClipboard(key.key)}\r\n                        className=\"flex items-center space-x-1 text-xs text-indigo-600 hover:text-indigo-800 font-medium transition-colors duration-200\"\r\n                      >\r\n                        {copiedKey === key.key ? (\r\n                          <>\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                            </svg>\r\n                            <span>Copied!</span>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <span>Copy</span>\r\n                          </>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Actions */}\r\n                  <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => startEdit(key)}\r\n                      className=\"flex-1 flex items-center justify-center space-x-2 px-4 py-2 text-sm font-medium text-indigo-600 bg-indigo-50 rounded-lg hover:bg-indigo-100 transition-colors duration-200\"\r\n                        >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                      </svg>\r\n                      <span>Edit</span>\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDelete(key.id)}\r\n                      className=\"flex-1 flex items-center justify-center space-x-2 px-4 py-2 text-sm font-medium text-red-600 bg-red-50 rounded-lg hover:bg-red-100 transition-colors duration-200\"\r\n                        >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                      </svg>\r\n                      <span>Delete</span>\r\n                        </button>\r\n                  </div>\r\n                </div>\r\n                  ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}